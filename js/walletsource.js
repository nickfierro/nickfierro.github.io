var incomingTx = {
  ammount: '',
  to: '',
  data: '',
  initiator: '',
  opHash: ''
};

var walletContract = web3.eth.contract([{"constant":true,"inputs":[],"name":"creator","outputs":[{"name":"","type":"address"}],"type":"function"},{"constant":false,"inputs":[{"name":"_to","type":"address"},{"name":"_value","type":"uint256"},{"name":"_data","type":"bytes"}],"name":"txConstruct","outputs":[{"name":"_r","type":"bytes32"}],"type":"function"},{"constant":true,"inputs":[],"name":"testaddr","outputs":[{"name":"","type":"address"}],"type":"function"},{"constant":false,"inputs":[{"name":"_h","type":"bytes32"}],"name":"confirm","outputs":[{"name":"","type":"bool"}],"type":"function"},{"constant":false,"inputs":[{"name":"_to","type":"address"}],"name":"test","outputs":[],"type":"function"},{"inputs":[],"type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"name":"operation","type":"bytes32"},{"indexed":false,"name":"initiator","type":"address"},{"indexed":false,"name":"value","type":"uint256"},{"indexed":false,"name":"to","type":"address"},{"indexed":false,"name":"data","type":"bytes"}],"name":"ConfirmationNeeded","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"owner","type":"address"},{"indexed":false,"name":"operation","type":"bytes32"},{"indexed":false,"name":"value","type":"uint256"},{"indexed":false,"name":"to","type":"address"},{"indexed":false,"name":"data","type":"bytes"}],"name":"Transact","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"from","type":"address"},{"indexed":false,"name":"value","type":"uint256"}],"name":"Deposit","type":"event"}]);

var wallet = walletContract.new(
   {
     from: web3.eth.accounts[0],
     data: '60606040525b33600060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908302179055505b6107fb8061003f6000396000f360606040523615610069576000357c01000000000000000000000000000000000000000000000000000000009004806302d05d3f146100d15780631a2671f11461010a578063258de43c14610153578063797af6271461018c578063bb29998e146101b857610069565b6100cf5b60003411156100cc577fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c3334604051808373ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a15b5b565b005b6100de60048050506101d0565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61013d6004808035906020019091908035906020019091908035906020019082018035906020019190919290505061024b565b6040518082815260200191505060405180910390f35b61016060048050506101f6565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6101a26004808035906020019091905050610448565b6040518082815260200191505060405180910390f35b6101ce600480803590602001909190505061021c565b005b600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908302179055505b50565b6000600036436040518084848082843782019150508281526020019350505050604051809103902090508050846002600050600083815260200190815260200160002060005060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908302179055508360026000506000838152602001908152602001600020600050600101600050819055508282600260005060008481526020019081526020016000206000506002016000509190828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061034457803560ff1916838001178555610375565b82800160010185558215610375579182015b82811115610374578235826000505591602001919060010190610356565b5b5090506103a09190610382565b8082111561039c5760008181506000905550600101610382565b5090565b50507f1733cbb53659d713b79580f79f3f9ff215f78a7c7aa45890f3b89fc5cddfbf32813386888787604051808781526020018673ffffffffffffffffffffffffffffffffffffffff1681526020018581526020018473ffffffffffffffffffffffffffffffffffffffff168152602001806020018281038252848482818152602001925080828437820191505097505050505050505060405180910390a15b949350505050565b600060006002600050600084815260200190815260200160002060005060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415156107f5576002600050600083815260200190815260200160002060005060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600260005060008481526020019081526020016000206000506001016000505460026000506000858152602001908152602001600020600050600201600050604051808280546001816001161561010002031660029004801561059d5780601f106105725761010080835404028352916020019161059d565b820191906000526020600020905b81548152906001019060200180831161058057829003601f168201915b505091505060006040518083038185876185025a03f192505050507f94afdc746209ec8f44fc1c00ad12b4de8504c942a4a23364b7dd90cf7d92de49338360026000506000868152602001908152602001600020600050600101600050546002600050600087815260200190815260200160002060005060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660026000506000888152602001908152602001600020600050600201600050604051808673ffffffffffffffffffffffffffffffffffffffff1681526020018581526020018481526020018373ffffffffffffffffffffffffffffffffffffffff168152602001806020018281038252838181546001816001161561010002031660029004815260200191508054600181600116156101000203166002900480156107245780601f106106f957610100808354040283529160200191610724565b820191906000526020600020905b81548152906001019060200180831161070757829003601f168201915b5050965050505050505060405180910390a16002600050600083815260200190815260200160002060006000820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055600182016000506000905560028201600050805460018160011615610100020316600290046000825580601f106107ac57506107e9565b601f0160209004906000526020600020908101906107e891906107ca565b808211156107e457600081815060009055506001016107ca565b5090565b5b505050600190506107f6565b5b91905056',
     gas: 3000000
   }, function(e, contract){
    console.log(e, contract);
    if (typeof contract.address != 'undefined') {
       wallet.ConfirmationNeeded().watch(function(error,result){
        console.log("I'm Watching for Incoming TX's")
         if (!error) {
           incomingTx.ammount = Number(result.args.value);
           incomingTx.to = result.args.to;
           incomingTx.data = result.args.data;
           incomingTx.initiator = result.args.initiator;
           incomingTx.opHash = result.args.operation;
         };
         console.log(incomingTx);
         console.log(result)
       });
       console.log('Contract mined! address: ' + contract.address + ' transactionHash: ' + contract.transactionHash);
    }
 });
